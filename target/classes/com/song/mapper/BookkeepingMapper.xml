<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.mapper.BookkeepingMapper">

	<resultMap type="com.song.entity.Bookkeeping" id="Bookkeeping">
		<id column="id" property="id"/>
		<result column="device_id"  property="deviceId"/>
		<result column="balance"  property="balance"/>
		<result column="user_id"  property="userId"/>
		<result column="bk_money"  property="bkMoney"/>
		<result column="bk_type"  property="bkType"/>
		<result column="classification" property="classification"/>
		<result column="remark"  property="remark"/>
		<result column="bk_time"  property="bkTime"/>
	</resultMap>

	<insert id="create" keyProperty="id" useGeneratedKeys="true" parameterType="com.song.entity.Bookkeeping">
		insert into tb_bookkeeping(
			device_id,
			balance,
			user_id,
			bk_money,
			bk_type,
			classification,
			remark,
			bk_time
		)values(
			#{deviceId},
			#{balance},
			#{userId},
			#{bkMoney},
			#{bkType},
		    #{classification},
			#{remark},
			#{bkTime}
		)
	</insert>

	<select id="query" resultMap="Bookkeeping">
		select * from tb_bookkeeping
		<include refid="BookkeepingFindCriteria"/>
	</select>

	<select id="count" resultType="int">
		select count(1) from tb_bookkeeping
		<include refid="BookkeepingFindCriteria"/>
	</select>

	<select id="detail" resultMap="Bookkeeping">
		select * from tb_bookkeeping where id = #{id}
	</select>

	<delete id="delete">
		delete from tb_bookkeeping where id = #{id}
	</delete>
	<update id="update">
		update tb_bookkeeping set
			device_id=#{deviceId},
			balance=#{balance},
			user_id=#{userId},
			bk_money=#{bkMoney},
			bk_type=#{bkType},
			classification=#{classification},
			remark=#{remark},
			bk_time=#{bkTime}
		where id = #{id}
	</update>

	<update id="updateSelective">
		update tb_bookkeeping set
			<if test="deviceId != null">device_id = #{deviceId}</if>,
			<if test="balance != null">balance = #{balance}</if>,
			<if test="userId != null">user_id = #{userId}</if>,
			<if test="bkMoney != null">bk_money = #{bkMoney}</if>,
			<if test="bkType != null">bk_type = #{bkType}</if>,
			<if test="classification != null">classification = #{classification}</if>,
			<if test="remark != null and remark != ''"> remark = #{remark}</if>,
			<if test="bkTime != null and bkTime != ''"> bk_time = #{bkTime}</if>
		where id = #{id}
	</update>

	<sql id="BookkeepingFindCriteria">
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="deviceId != null">and device_id = #{deviceId}</if>
			<if test="balance != null">and balance = #{balance}</if>
			<if test="userId != null">and user_id = #{userId}</if>
			<if test="bkMoney != null">and bk_money = #{bkMoney}</if>
			<if test="classification != null">and classification = #{classification}</if>
			<if test="bkType != null">and bk_type = #{bkType}</if>
			<if test="remark != null and remark != ''">and remark like concat('%', #{remark},'%')</if>
		</where>
	</sql>



	<select id="queryMyDeviceExpenditure" resultMap="Bookkeeping">
		select * from tb_bookkeeping where bk_type = 0 and bk_time between '2021-06-01' and '2021-07-01' and
					(select device_id from tb_user where tb_user.id = tb_bookkeeping.user_id) =
					(select device_id from tb_user where tb_user.id = #{userId})
		order by classification
	</select>

	<select id="queryMyDevice" resultMap="Bookkeeping">
		select * from tb_bookkeeping
		<include refid="BookkeepingFindCriteria"/>
		order by bk_time desc
	</select>


	<select id="queryMyDeviceEachClassificationAmount" resultType="int">
		select count(*) from tb_bookkeeping where bk_type = 0 and
					(select device_id from tb_user where tb_user.id = tb_bookkeeping.user_id) =
					(select device_id from tb_user where tb_user.id = #{userId})
		group by classification order by classification;
	</select>


	<select id="queryMaxDate" resultType="date">
		select max(bk_time) from tb_bookkeeping where device_id = #{deviceId}
	</select>


	<select id="queryMonthlyExpenditureByClassification" resultType="double">
		select sum(bk_money) from tb_bookkeeping
		where bk_type = 0
		and device_id = #{deviceId}
		and
			(bk_time &lt; concat(#{year}, '-', #{month}+1, '-01') and bk_time &gt; concat(#{year}, '-', #{month}, '-01'))
		and classification = #{classification}
	</select>

</mapper>